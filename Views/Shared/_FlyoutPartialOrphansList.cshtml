@using TabFusionRMS.Resource
@model TabFusionRMS.WebCS.FlyoutModel


<style>
    .no-row-margin {
        margin-right: 0px !important;
        margin-left: 0px !important;
        margin-bottom: 0px !important;
        padding-left: 0px !important;
        padding-bottom: 0px !important;
    }
    .table-border {
        border: 1px solid #ccc;
    }

    .thead-dark {
        background-color: #dcdcdc;
    }

    .table1 > tbody > tr > td, .table1 > tbody > tr > th, .table1 > tfoot > tr > td, .table1 > tfoot > tr > th, .table1 > thead > tr > td, .table1 > thead > tr > th {
        padding: 8px;
        line-height: 1.42857143;
        vertical-align: top;
        border-top: 1px solid #ddd;
        border-left: 1px solid #ddd;
        border-bottom: 1px solid #ddd;
    }
    table1 {
        margin-bottom: 0px !important;
    }
    .containorphan {
        border: 1px solid #666666;
        padding: 22px 8px 0px 8px;
        height: 67vh;
        overflow-y: scroll;
    }
     .sidebar-wrapper {
        background: #fff;
    }
    .tablescroll {
        overflow-y: scroll;
        height: 70vh;
        border: 1px solid #666666;
    }
</style>

<div class="row no-row-margin" id="ThumbnailDetails">
    @{ var i = 0; }

    @if(Model.FlyOutDetails.Count > 0) {
        <Table Class="table table-border table1">
            <thead Class="thead-dark">
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">  @Languages.get_Translation("attachmentName")</th>
                    <th scope="col">  @Languages.get_Translation("recordType")</th>
                    <th scope="col">  @Languages.get_Translation("scanDateTime")</th>
                    <th scope="col" style="display:none">  @Languages.get_Translation("downloadAttachments")</th>
                    <th scope="col">  @Languages.get_Translation("Select")</th>
                </tr>
            </thead>
            <tbody>
                
                @foreach(var item in Model.FlyOutDetails)
                {

                    i = i + 1;
                    string img64 = String.Empty;
                    var dockey = item.downloadEncryptAttachment;
                    if(item.sFlyoutImages !=null)
                    {
                        img64 = Convert.ToBase64String(item.sFlyoutImages);
                    }
                    var type = "Image";
                    if(item.recordType.Equals(5))
                    {
                        type = "Doc";
                    }

                    <tr>
                        <th scope="row"> @item.sRowNum</th>
                        <td>@item.sAttachmentName</td>
                        <td>@type</td>
                        <td>@item.scanDateTime</td>
                        <td style="display:none">
                            <span Class="fa-stack">
                                
                                @if(Model.downloadPermission && item.sOrgFilePath != "disabled")
                            {
                               <a href="@Url.Action("DownloadAttachmentOrphan", "Common", new {filePath = item.sOrgFilePath, fileName = item.sAttachmentName})" Class="a-color " data-toggle="tooltip" title="Download" id="Download_@item.sAttachId" fileName="@item.sAttachmentName">
                                        <span class="fa-stack">
                                            <i class="fa fa-arrow-down fa-stack-1x" style="top:7px"></i>
                                            <i class="fa fa-circle-thin fa-stack-2x"></i>
                                        </span>
                                    </a> 
                            }
                            else
                            {
                                <a href="#" Class="a-disable" data-toggle="tooltip" title="Download" style="color:gray !important">
                                        <span class="fa-stack">
                                             <i class="fa fa-arrow-down fa-stack-1x" style="top:7px"></i>
                                            <i class="fa fa-circle-thin fa-stack-2x"></i>
                                        </span>
                                    </a>
                            }
                            </span>
                        </td>
                        <td>
                            <input type="checkbox" trackableId="@item.sAttachId" onclick="obJvaultfunction.ShowButtons()" />
                        </td>
                    </tr>
                }

            </tbody>
        </Table>
    }
    else
    {
        @if(Model.filter == null)
        {
            Model.filter = "";
        }
        if(Model.filter.Length > 0)
        {
            <div class="col-sm-12 containorphan" style="margin-bottom: 19px;">
                <div id="emptywarning" Class="empty-warning">
                    <span>"Record Not Found"</span>
                </div>
            </div>
        }
        else
        {
            <div class="col-sm-12" style="margin-bottom: 19px;">
                <div id="emptydrop" Class="empty-drop-here">
                    <span>@Languages.get_Translation("lblDragandDropFiles")</span>
                </div>
            </div>
        }
    }

</div>

<script>
    function InvalidMessage(isvalid) {
        var msg = "Attachment cannot be rendered or displayed. The attachment can still be downloaded.!"
        $('#toast-container').fnAlertMessage({ title: '', msgTypeClass: 'toast-warning', message: msg, timeout: 2000 });
    }

</script>